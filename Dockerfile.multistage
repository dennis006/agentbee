# Multi-Stage Dockerfile - Alternative Approach
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Copy package files
COPY package*.json ./

# Install ALL dependencies (including dev)
RUN npm ci --no-audit --no-fund

# Copy source
COPY . .

# ================================
# Production Stage
# ================================
FROM node:20-alpine AS production

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production --no-audit --no-fund

# Copy built application from builder
COPY --from=builder /app .

# Create directories
RUN mkdir -p public/images/welcome

# Set environment
ENV NODE_ENV=production

# Expose port
EXPOSE 3001

# Start application
CMD ["node", "index.js"] 